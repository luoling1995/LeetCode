

给出 1->3->8->11->15->null，2->null， 返回 1->2->3->8->11->15->null

/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */


public class Solution {
    /*
     * @param l1: ListNode l1 is the head of the linked list
     * @param l2: ListNode l2 is the head of the linked list
     * @return: ListNode head of linked list
     */
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // write your code here
        ListNode first = new ListNode(0);
        ListNode flag = first;
        ListNode temp;
        while(l1 != null && l2 != null){
            if(l1.val > l2.val){
                temp = l2;
                flag.next = l2;
                flag = flag.next;
                l2 = l2.next;
            }else{
                temp = l1;
                flag.next = l1;
                flag = flag.next;
                l1 = l1.next;
            }
        }
        if(l1 == null){
            flag.next = l2;
        }else{
            flag.next = l1;
        }
        
        return first.next;
    }
}
