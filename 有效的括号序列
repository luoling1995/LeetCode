思路：用一个栈存放左括号，只要遇到右括号，就pop，判断是否匹配，如果不匹配，return false，如果stack为空，但是有右括号，return false。
如果最后stack不为空，但是没有右括号了，return false。否则返回true。

"()[]{}" 是有效的括号，但 "([)]"则是无效的括号。

public class Solution {
    /*
     * @param s: A string
     * @return: whether the string is a valid parentheses
     */
    public boolean isValidParentheses(String s) {
        // write your code here
        Stack<Character> left = new Stack<Character>();
        int N = s.length();
        for(int i = 0;i < N;i++){
            if(s.charAt(i) == '(' || s.charAt(i) == '[' || s.charAt(i) == '{')
                left.push(s.charAt(i));
            else{
                if(left.empty())
                    return false;
                if(s.charAt(i) == ')' && left.peek() != '('){
                    return false;
                }else if(s.charAt(i) == ']' && left.peek() != '['){
                    return false;
                }else if(s.charAt(i) == '}' && left.peek() != '{'){
                    return false;
                }
                left.pop();
            }
        }
        if(!left.empty())
            return false;
        return true;
    }
}
